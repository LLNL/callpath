# - callpath: Library to represent callpaths in memory.
#
#=============================================================================
# Callpath is a library for representing unique callpaths in memory.  The
# callpaths built using the library are stored uniquely and represented using
# reference semantics for fast comparison.  Also, callpaths use
# (module, offset) pairs as their frames, so a particular frame will have the
# same representation regardless of different shared library load addresses
# across processes in MPI applications.
#
#=== Usage ===================================================================
# This file allows callpath to be automatically detected by other libraries
# using CMake.  To build with callpath, you can do one of two things:
#
#   1. Set the callpath_DIR environment variable to the root of the Adept Utils
#      installation.  If you loaded callpath through a dotkit, this may already
#      be set, and callpath will be autodetected by CMake.
#
#   2. Configure your proeject with this option:
#      -D callpath_DIR=/path/to/dir/containing/this/file
#
# If you have done either of these things, then CMake should automatically find
# and include this file when you call find_package(callpath) from your
# CMakeLists.txt file.
#
#=== Components ==============================================================
# (Todd's TO DO)
#
# To link against these, just do, for example:
#
#   find_package(callpath REQUIRED)
#   add_executable(foo foo.c)
#   target_link_libraries(foo callpath-component)
#
# That's all!
#
if (NOT callpath_CONFIG_LOADED)
  set(callpath_CONFIG_LOADED TRUE)

  # Install layout
  set(callpath_INSTALL_PREFIX @CMAKE_INSTALL_PREFIX@)
  set(callpath_INCLUDE_DIR    ${callpath_INSTALL_PREFIX}/include)
  set(callpath_LIB_DIR        ${callpath_INSTALL_PREFIX}/lib)
  set(callpath_CMAKE_DIR      ${callpath_INSTALL_PREFIX}/share/cmake/callpath)

  # Includes needed to use callpath
  set(callpath_INCLUDE_PATH ${callpath_INCLUDE_DIR})
  set(callpath_LIB_PATH     ${callpath_LIB_DIR})

  # Whether the library was built with MPI
	set(callpath_HAVE_MPI @CALLPATH_HAVE_MPI@)

  # Library targets imported from file
  include(${callpath_CMAKE_DIR}/callpath-libs.cmake)
endif()
